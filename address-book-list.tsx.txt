import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";
import { Plus, Send } from "lucide-react";
import { useQuery } from "@tanstack/react-query";
import { useWallet } from "@/hooks/use-wallet";
import type { Contact } from "@shared/schema";
import { Link } from "wouter";

interface AddressBookListProps {
  onSelectContact?: (contact: Contact) => void;
}

export function AddressBookList({ onSelectContact }: AddressBookListProps) {
  const { user } = useWallet();

  const { data: contacts = [], isLoading } = useQuery<Contact[]>({
    queryKey: ["/api/contacts", user?.id],
    enabled: !!user?.id,
  });

  const getInitials = (name: string) => {
    return name
      .split(" ")
      .map(word => word[0])
      .join("")
      .toUpperCase()
      .slice(0, 2);
  };

  const formatAddress = (address: string) => {
    return `${address.slice(0, 6)}...${address.slice(-4)}`;
  };

  if (isLoading) {
    return (
      <Card data-testid="address-book-loading">
        <CardHeader>
          <CardTitle>Address Book</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-3">
            {[1, 2, 3].map((i) => (
              <div key={i} className="flex items-center space-x-3 p-3 bg-muted rounded-lg animate-pulse">
                <div className="w-10 h-10 bg-background rounded-full"></div>
                <div className="flex-1 space-y-1">
                  <div className="h-4 bg-background rounded w-24"></div>
                  <div className="h-3 bg-background rounded w-32"></div>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card data-testid="address-book-card">
      <CardHeader>
        <CardTitle>Address Book</CardTitle>
      </CardHeader>
      <CardContent>
        {contacts.length === 0 ? (
          <div className="text-center py-6">
            <div className="w-12 h-12 bg-muted rounded-full flex items-center justify-center mx-auto mb-4">
              <Plus className="h-6 w-6 text-muted-foreground" />
            </div>
            <h3 className="text-lg font-medium text-foreground mb-2">No contacts yet</h3>
            <p className="text-muted-foreground mb-4">Add contacts to send money quickly</p>
            <Link href="/contacts">
              <Button data-testid="button-add-first-contact">
                <Plus className="mr-2 h-4 w-4" />
                Add Contact
              </Button>
            </Link>
          </div>
        ) : (
          <>
            <div className="space-y-3">
              {contacts.slice(0, 3).map((contact, index) => (
                <div 
                  key={contact.id} 
                  className="flex items-center justify-between p-3 bg-muted rounded-lg hover:bg-muted/80 transition-colors cursor-pointer"
                  data-testid={`contact-item-${index}`}
                >
                  <div className="flex items-center space-x-3">
                    <Avatar className="w-10 h-10">
                      <AvatarFallback className="bg-primary text-primary-foreground font-semibold">
                        {getInitials(contact.name)}
                      </AvatarFallback>
                    </Avatar>
                    <div>
                      <p className="font-medium text-foreground" data-testid={`contact-name-${index}`}>
                        {contact.name}
                      </p>
                      <p className="text-sm text-muted-foreground" data-testid={`contact-address-${index}`}>
                        {formatAddress(contact.walletAddress)}
                      </p>
                    </div>
                  </div>
                  <Button 
                    variant="ghost" 
                    size="sm"
                    onClick={() => onSelectContact?.(contact)}
                    data-testid={`button-send-to-contact-${index}`}
                  >
                    <Send className="h-4 w-4" />
                  </Button>
                </div>
              ))}
            </div>
            <Link href="/contacts">
              <Button 
                variant="outline" 
                className="w-full mt-4"
                data-testid="button-manage-contacts"
              >
                <Plus className="mr-2 h-4 w-4" />
                Add Contact
              </Button>
            </Link>
          </>
        )}
      </CardContent>
    </Card>
  );
}
